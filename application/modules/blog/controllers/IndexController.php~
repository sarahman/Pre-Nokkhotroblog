<?php

/**
 * Index Controller
 *
 * @category        Controller
 * @package         User
 * @author          Md. Sirajus Salayhin <salayhin@gmail.com>
 * @copyright       Copyright (c) 2011
 */

class Blog_IndexController extends Speed_Controller_ActionController
{
    public function init()
    {
        parent::init();
        $categoryModel = new Blog_Model_BlogCategory();
        $this->view->Category   = $categoryModel->getAll();
        $pageModel = new Admin_Model_Page();
        $this->view->pagePosts   = $pageModel->getAll();
    }

    public function indexAction()
    {
        $blogModel   = new Blog_Model_Blog();
        $noticeModel = new Blog_Model_Notice();
        $commentModel = new Blog_Model_BlogComment();

        $categoryModel = new Blog_Model_BlogCategory();
        $pageModel = new Admin_Model_Page();


        $userModel = new Speed_Model_User();

        $this->view->selectedBlogs      = $blogModel->getSelectedPosts();
        $this->view->recentBlogs        = $blogModel->getRecentPosts();
        $this->view->notices            = $noticeModel->getNoticePost();
        $this->view->newBlogger         = $userModel->getAllUsers();
        $this->view->maxViewed          = $blogModel->getMaxViewBlog();
        $this->view->maxCommented       = $commentModel->getMaxCommentedBlog();
        $this->view->recentComments     = $commentModel->getRecentComments();
        $this->view->topBloger          = $blogModel->getTopBlogger();
        $this->view->topCommentPoster   = $commentModel->getTopCommentPoster();

        $this->view->Category   = $categoryModel->getAll();
        $this->view->pages = $pageModel->getAll();

        $this->view->stickyPost         = $blogModel->getStickeyPost();

    }

    public function categoryPostsAction()
    {
        $this->_helper->layout->setLayout('catagory');
         $blogModel = new Blog_Model_Blog();
        $id = $this->_request->getParam('id');
      
        $categoryPosts = $blogModel->getDetailByCategoryId($id);
                if (empty($categoryPosts)) {
            $this->redirectForFailure("/blog/Index/categoryPosts/id/{$id }", "Notice has been deleted.");
        }

        $this->view->categoryPosts = $categoryPosts;
    }

     public function footerPageAction()
    {
        $this->_helper->layout->setLayout('catagory');
         $pageModel = new Admin_Model_Page();
        $permalink = $this->_request->getParam('permalink');

        $pagePosts = $pageModel->getDetailByPagePermalink($permalink);
                if (empty($pagePosts)) {
            $this->redirectForFailure("/blog/Index/footer-page/id/{$permalink }", "Notice has been deleted.");
        }

        $this->view->pagePosts = $pagePosts;
    }



}

