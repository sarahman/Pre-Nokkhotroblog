<?php
/**
 * Category Controller
 *
 * @category    Controller
 * @package     Admin
 * @author      Md. Sirajus Salayhin <salayhin@gmail.com>
 */
class Admin_CategorysController extends Speed_Controller_ActionController
{
  protected $blogModel;

    protected function initialize()
    {
        $this->view->navBar = 'admin';
        $this->_helper->layout->setLayout('admin');
        $this->validateAdmin();
    }
    public function indexAction()
    {
    
	$this->validateAdmin();

        $categoryDisplayModel = new Category_Model_BlogCategory();
         $display=$categoryDisplayModel->getAll();
      
	$this->view->display = $display;

    }

    public function editAction()
            {
                $this->validateAdmin();

                $blogCategoryModel = new Blog_Model_BlogCategory();
                $blogModel = new Blog_Model_Blog();
                $blogId = $this->_request->getParam('id');

                $blogForm = new Blog_Form_BlogEntry(array(
                    'blog_category_id' => $blogCategoryModel->getAll(),
                    'isEdit' => true,
                    'blog_id' => $blogId
                ));

                if ($this->_request->isPost()) {

                    $data = $this->_request->getParams();

                    if ($blogForm->isValid($data)) {
                        $result = $blogModel->modify($data, $data['blog_id']);
                        if (empty($result)) {
                            $this->redirectForFailure("/admin/blogs/show/id/{$data['blog_id']}",'Problem , Please try again.');
                        } else {
                            $this->redirectForSuccess("/admin/blogs/show/id/{$data['blog_id']}",'Blog has updated successfully.');
                        }

                    } else {
                        $blogForm->populate($data);
                    }

                } else {

                    if (empty($blogId)) {


                        $this->redirectForFailure("/admin/blogs/show/id/{$blogId}",'Blog has not been found.');
                    } else {

                        $blogModel = new Blog_Model_Blog();
                        $blogData = $blogModel->getDetailForAdmin($blogId);

                        if (empty($blogData)) {

                            $this->redirectForFailure("/admin/blogs/show/id/{$blogId}",'Blog data has not been found');
                        } else {
                            $blogForm->populate($blogData);
                        }
                    }
                }

                $this->view->blogForm = $blogForm;
            }


    public function selectAction()
        {
            $data = array();

            $this->disableLayout();

            $blogId = $this->_request->getParam('id');

            $authNamespace = new Zend_Session_Namespace('adminInformation');
            $adminId = $authNamespace->adminData['admin_id'];

            $data['last_modarate_by'] = $adminId;

            $blogModel = new Blog_Model_Blog();
            $status = $blogModel->setSelectStatus($data,$blogId);

            if($status){
                $this->redirectForSuccess("/admin/blogs/show/id/{$blogId}","Blog select status updated");
            }else{
                $this->redirectForFailure("/admin/blogs/show/id/{$blogId}","Something went wrong");
            }

        }

    public function stickyAction()
    {
            $data = array();
            $this->disableLayout();

            $blogId = $this->_request->getParam('id');

            $authNamespace = new Zend_Session_Namespace('adminInformation');

            $adminId = $authNamespace->adminData['admin_id'];

            $data['last_modarate_by'] = $adminId;

            $blogModel = new Blog_Model_Blog();
            $status = $blogModel->setStickyPost($data, $blogId);

            if($status)
            {
               $this->redirectForSuccess("/admin/blogs/show/id/{$blogId}","Blog select status updated");
               }else{
               $this->redirectForFailure("/admin/blogs/show/id/{$blogId}","Something went wrong");
            }

    }

    public function showAction()
    {
        $this->validateAdmin();

        $blogModel = new Blog_Model_Blog();
        $blogId = $this->_request->getParam('id');

        $blog = $blogModel->getDetailForAdmin($blogId);

        if(empty($blog)){
            $this->redirectForFailure("/admin/blogs","Post has been deleted.");
        }

        $this->view->blog = $blog;
    }


   
    protected function setPagination(Speed_Model_Abstract $model, $rows, $rowCount, $action = 'index')
    {
        $paginator = $model->getPaginator($rows, $rowCount);
        $this->view->paginator = $paginator;

        $this->view->paginatorOptions = array(
            'path' => '',
            'itemLink' => "/admin/blogs/{$action}/page/%d"
        );
    }

     	
    public function deleteAction()
    {
        $categoryDeleteModel = new Blog_Model_BlogCategory();

        $categoryId = $this->_request->getParam('id');

        $status = $categoryDeleteModel->delete($categoryId);

        if($status)
            {
               $this->redirectForSuccess("/admin/blogs/display","Category deleted Sucessfully.");
               }else{
               $this->redirectForFailure("/admin/blogs/delete/id/{$categoryId}","Something went wrong. Please try again");
            }
    }





   public function addAction()
       {

           $this->validateAdmin();

           $blogCategoryModel = new Blog_Model_BlogCategory();
           $CategoryEntry = new Blog_Form_CategoryEntry();

           if ($this->_request->isPost()) {

               $data = $this->_request->getParams();
               $data['category_name'] = stripslashes($this->_request->getParam('category_name'));


               if ($CategoryEntry->isValid($data)) {

                   $categoryModel = new Blog_Model_Blog();

                   $result = $categoryModel->save($data);
                   if (empty($result)) {
                       $this->setFailureMessage('There was a problem , Please try again.');
                   } else {
                       //$this->view->errorMsg = "Blog has been posted successfully.";
                       $this->setSuccessMessage('Category Posted sucessfully');
                   }

               } else {
                   $CategoryEntry->populate($data);
               }
           }

           $this->view->CategoryEntry= $CategoryEntry;

       }

}
